version: '3.8'

services:
  kafka:
    image: "wurstmeister/kafka:2.13-2.6.0"
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    hostname: "kafka"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "INTERNAL://:9092,OUTSIDE://:9093"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,OUTSIDE://localhost:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:SASL_PLAINTEXT,OUTSIDE:SASL_PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/opt/kafka/config/kafka_server_jaas.conf"
      KAFKA_SASL_ENABLED_MECHANISMS: "SCRAM-SHA-512"
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: "SCRAM-SHA-512"
      CUSTOM_INIT_SCRIPT: "/opt/kafka/bin/kafka-configs.sh /
                              --zookeeper zookeeper:2181 --alter /
                              --add-config 'SCRAM-SHA-512=[password=${KAFKA_HACK}]' /
                              --entity-type users /
                              --entity-name ${KAFKA_HACK};"
      KAFKA_CREATE_TOPICS: " logger.records.store:2:1"
    volumes:
      - ./kafka/secrets/kafka_server_jaas.config:/opt/kafka/config/kafka_server_jaas.conf:ro
  zookeeper:
    image: "confluentinc/cp-zookeeper:${TAG_CONFLUENTINC}"
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_AUTH_PROVIDER_SASL: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
      KAFKA_OPTS: -Djava.security.auth.login.config=/tmp/zookeeper.sasl.jaas.config
    volumes:
      - ./zookeeper/zookeeper.sasl.jaas.config:/tmp/zookeeper.sasl.jaas.config:ro
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 10s
  schemaregistry:
    image: "confluentinc/cp-schema-registry:${TAG_CONFLUENTINC}"
    hostname: schemaregistry
    container_name: schemaregistry
    restart: always
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8085:8085"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_PLAINTEXT
      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: SCRAM-SHA-512
      SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: org.apache.kafka.common.security.scram.ScramLoginModule required \
        username="kafka" \
        password="kafka" ;
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: '*'
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: 'GET,POST,PUT,OPTIONS'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8085
      CUB_CLASSPATH: '/usr/share/java/confluent-security/schema-registry/*:/usr/share/java/schema-registry/*:/usr/share/java/cp-base-new/*'

  clickhouse:
    image: "yandex/clickhouse-server:${TAG_CLICKHOUSE}"
    volumes:
      - ./clickhouse/users.xml:/etc/clickhouse-server/users.d/users.xml
      - ./clickhouse/config.xml:/etc/clickhouse-server/config.d/config.xml
      - ./clickhouse/sql/:/docker-entrypoint-initdb.d/
      - ./clickhouse/macros-1.xml:/etc/clickhouse-server/config.d/macros.xml
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    ports:
      - "8123:8123"
      - "9000:9000"
    depends_on:
      zookeeper:
        condition: service_healthy
